name: Release
run-name: Creating release from ${{ github.ref_name }}
on:
  pull_request:
    types:
    - closed
    - ready_for_review
    - synchronize
    branches:
    - 'main'
    paths:
    - 'pyproject.toml'

jobs:
  paths:
    if: github.event.action == 'synchronize'
    uses: ./.github/workflows/paths.yaml
    with:
      paths: |
        src
        ./.github/workflows/test-functional.yaml

  tests:
    needs: paths
    if: github.event.action != 'synchronize' || needs.paths.outputs.matches
    uses: ./.github/workflows/test-functional.yaml

  package:
    needs: tests
    if: always()
        && (needs.tests.result == 'success'
            || needs.tests.result == 'skipped')
    uses: ./.github/workflows/package.yaml
    with:
      build-number: ${{ github.event.action != 'closed'
                        && github.event.pull_request.draft }}
      release-candidate: ${{ !github.event.pull_request.draft}}

  publish:
    needs: package
    if: always() && (needs.package.result == 'success')
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve release distributions
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.package.outputs.dists-name }}
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        repository-url: |
          https://${{ !github.event.pull_request.merged
                      && github.event.pull_request.draft
                      && 'test' || 'upload'
                      }}.pypi.org/legacy/

  release-gh:
    needs: publish
    if: always()
        && (needs.publish.result == 'success'
            && (github.event.pull_request.merged
                || !github.event.pull_request.draft))
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        sparse-checkout: |
          pyproject.toml
        sparse-checkout-cone-mode: false
    - name: GH Release
      uses: lime-actions/gh-release@latest
      with:
        message: ${{ !github.event.pull_request.merged
                     && 'Release candidate' || '' }}
        release-candidate: ${{ !github.event.pull_request.merged }}
        version-from: 'pyproject.toml'
