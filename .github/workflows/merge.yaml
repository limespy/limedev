name: Merge
run-name: Merging ${{ github.event.pull_request.head.ref }} -> ${{ github.event.pull_request.base.ref }}

on:
  pull_request_review:
    types:
    - submitted

jobs:
  tests:
    if: github.event.review.state == 'approved'
    uses: ./.github/workflows/test-functional.yaml

  publish:
    needs: tests
    if: github.event.pull_request.base.ref
        == github.event.repository.default_branch
        || github.event.pull_request.base.ref
        == 'release-candidate'
    uses: ./.github/workflows/publish.yaml
    permissions:
      id-token: write

  merge:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        sparse-checkout: |
          pyproject.toml
        sparse-checkout-cone-mode: false
    - name: Merge
      uses: lime-actions/merge@latest
      with:
        version-from: 'pyproject.toml'
    - name: Merge back
      if: github.event.pull_request.base.ref
          == github.event.repository.default_branch
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"

        git fetch

        git checkout release-candidate
        git merge origin/${{ github.event.pull_request.base.ref }} -X ours
        git push

        git checkout dev
        git merge release-candidate -X ours
        git push
